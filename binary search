#include <iostream>
#include <vector>
using namespace std;

class Solution {
public:
    int search(vector<int>& nums, int target) {
        int left = 0, right = nums.size() - 1, mid = 0;

        while (left <= right) {
            mid = (left + right) / 2;

            if (nums[mid] == target) {
                return mid;  // Target found, return index
            }
            else if (nums[mid] < target) {
                left = mid + 1;  // Search in the right half
            }
            else {
                right = mid - 1; // Search in the left half
            }
        }

        return -1;  // Target not found
    }
};

int main() {
    Solution sol;
    vector<int> nums = {-1, 0, 3, 5, 9, 12};
    
    int target1 = 9;
    int target2 = 2;

    cout << "Index of " << target1 << ": " << sol.search(nums, target1) << endl; // Output: 4
    cout << "Index of " << target2 << ": " << sol.search(nums, target2) << endl; // Output: -1 (not found)

    return 0;
}
